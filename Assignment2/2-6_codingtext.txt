#include <string>
#include <vector>

using namespace std;

#ifdef _DEBUG
#define ASSERT(expr)\
if (!(expr))\
{\
	_asm {\
	int 3\
	}\
}
#else
#define ASSERT(expr)
#endif

#define ARRAY_LENGTH(arr) sizeof((arr)) / sizeof((arr)[0])

enum
{
	MAX_LENGTH = 100,
	MIN_LENGTH = 1,
};

int solution(string s) {
	ASSERT(s[0] != ' ');
	ASSERT(s[s.length() - 1] != ' ');
	int lastNum = 0;
	int sum = 0;
	bool bIsLastDigit = false;
	bool bIsPlus = true;
	for (char c : s)
	{
		if (isdigit(c))
		{
			if (!bIsLastDigit)
			{
				lastNum = 0;
			}
			bIsLastDigit = true;
			lastNum *= 10;
			lastNum += c - '0';
			continue;
		}
		if (c == 'Z')
		{
			bIsLastDigit = false;
			sum -= lastNum;
			continue;
		}
		if (c == '-')
		{
			bIsPlus = false;
			continue;
		}
		ASSERT(c == ' ');
		if (!bIsLastDigit)
		{

			continue;
		}
		bIsLastDigit = false;
		lastNum = bIsPlus ? lastNum : -lastNum;
		sum += lastNum;
		bIsPlus = true;
	}
	if (bIsLastDigit)
	{
		lastNum = bIsPlus ? lastNum : -lastNum;
		sum += lastNum;
	}
	
	return sum;
}
